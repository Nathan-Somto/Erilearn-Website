import React, { useState } from "react";
import { motion, Variants } from "framer-motion";
import Image from "next/image";
import Link from 'next/link';
type Props = {
  image: string;
  name: string;
  title: string;
  linkedinUrl:string;
};

const ImageCard = ({ image, name, title, linkedinUrl }: Props) => {
  const [isHovering, setIsHovering] = useState(false);
  const handleMouseEnter = () => {
    setIsHovering(true);
  };

  const handleMouseLeave = () => {
    setIsHovering(false);
  };

  const cardVariants: Variants = {
    initial: { width: 128, height: 380, borderRadius: 20 },
    hover: {
      width: 360,
      height: 470,
      borderRadius: 16,
      transition: {
        delayChildren: 1.35,
        staggerChildren: 0.2,
        duration: 0.65,
        ease: "easeIn",
      },
    },
  };

  const textVariants: Variants = {
    initial: { opacity: 0 },
    hover: {
      opacity: 1,
      transition: {
        duration: 0.45,
      },
    },
  };
  return (
    <div className="swiper-slide !h-[auto] !w-[auto]">
      <motion.div
        variants={cardVariants}
        initial={"initial"}
        whileHover={"hover"}
        whileTap={"hover"}
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        onTouchStart={handleMouseEnter}
        onTouchEnd={handleMouseLeave}
        className="relative top-0 bottom-0 cursor-pointer  flex-shrink-0 h-[380px]   overflow-hidden rounded-[16px]"
      >
        <Image src={"/" + image} alt={name} fill className="object-cover" />
        <motion.div
          transition={{ duration: 0.55, ease: "easeIn" }}
          initial={{
            background:
              "linear-gradient(0deg, rgba(117, 98, 98, 0.50) 0%, rgba(117, 98, 98, 0.50) 100%)",
          }}
          animate={
            isHovering
              ? {
                  background:
                    "linear-gradient(to top left,rgba(30,0,0,0.79), rgba(0,0,0,0))",
                }
              : {
                  background:
                    "linear-gradient(0deg, rgba(117, 98, 98, 0.50) 0%, rgba(117, 98, 98, 0.50) 100%)",
                }
          }
          className="absolute  pl-[20px] flex flex-col justify-end pb-[18px] bg-gradient-to-tl from-[rgba(30,0,0,0.79)] to-[rgba(0,0,0,0)] top-0 bottom-0 right-0 left-0 z-[50] h-full w-full"
        >
          <motion.div
            variants={textVariants}
            initial="initial"
            animate={isHovering ? "hover" : "initial"}
            className="absolute top-[20px] right-[10px] z-[10]"
          >
          <Link href={linkedinUrl}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="64"
              height="16"
              viewBox="0 0 64 16"
              fill="none"
            >
              <g clip-path="url(#clip0_583_246)">
                <path
                  d="M25.2571 9.37138L28.7886 13.7142H26L22.8571 9.72575V13.7142H20.5714V2.28575H22.8571V9.00575L25.76 5.71425H28.6742L25.2571 9.37138ZM16.1143 5.48575C15.6138 5.49324 15.1226 5.62192 14.6827 5.86075C14.2429 6.09959 13.8675 6.44147 13.5886 6.85712V5.71425H11.4286V13.7142H13.7142V9.97713C13.6842 9.70587 13.7104 9.43134 13.791 9.17063C13.8717 8.90991 14.0052 8.66859 14.1831 8.46168C14.3611 8.25477 14.5797 8.08671 14.8254 7.96795C15.0712 7.84919 15.3387 7.78228 15.6114 7.77138C16.9371 7.77138 17.1429 9.07425 17.1429 9.97713V13.7142H19.4286V9.47425C19.4286 6.96 18.5942 5.48575 16.16 5.48575H16.1143ZM36.5714 9.89713C36.5801 10.0646 36.5801 10.2325 36.5714 10.4H30.5714V10.48C30.6688 10.9566 30.9328 11.3829 31.3161 11.6824C31.6994 11.9819 32.1769 12.135 32.6629 12.1143C33.0484 12.131 33.4334 12.0698 33.7947 11.9343C34.156 11.7989 34.4863 11.5919 34.7658 11.3258L36.2858 12.4686C35.804 12.9602 35.2245 13.3454 34.5848 13.5994C33.945 13.8533 33.2591 13.9703 32.5714 13.9429C32.0018 13.9789 31.4311 13.8922 30.8979 13.6888C30.3647 13.4853 29.8814 13.1698 29.4805 12.7635C29.0797 12.3573 28.7707 11.8697 28.5745 11.3338C28.3782 10.7979 28.2992 10.2262 28.3429 9.65713C28.3312 9.09538 28.4353 8.53725 28.6488 8.01752C28.8622 7.49778 29.1804 7.02758 29.5836 6.63623C29.9867 6.24487 30.4662 5.94075 30.992 5.74282C31.5179 5.54488 32.0789 5.45737 32.64 5.48575C34.7886 5.48575 36.5714 7.00575 36.5714 9.89713ZM34.4458 8.91425C34.4373 8.68788 34.3829 8.46559 34.2858 8.26092C34.1887 8.05626 34.051 7.87351 33.881 7.72381C33.711 7.57411 33.5122 7.46059 33.2969 7.39018C33.0816 7.31977 32.8542 7.29393 32.6286 7.31425C31.6236 7.20563 30.7135 7.9135 30.5714 8.91425H34.4458ZM2.28575 2.28575H0V13.7142H6.85712V11.4288H2.28575V2.28575ZM43.4286 2.28575H45.7142V13.7142H43.5542V12.9143C43.28 13.2522 42.9304 13.5212 42.5335 13.6998C42.1366 13.8784 41.7034 13.9617 41.2686 13.9429C40.7374 13.9292 40.2146 13.8071 39.7323 13.584C39.25 13.3608 38.8184 13.0414 38.4641 12.6454C38.1098 12.2493 37.8403 11.785 37.672 11.2809C37.5038 10.7769 37.4404 10.2437 37.4857 9.71425C37.4318 9.18404 37.4888 8.6484 37.6531 8.14142C37.8174 7.63444 38.0855 7.16721 38.4402 6.76947C38.795 6.37174 39.2286 6.0522 39.7136 5.83119C40.1986 5.61018 40.7242 5.49254 41.2571 5.48575C41.6541 5.46836 42.0505 5.53014 42.4233 5.66749C42.7961 5.80483 43.1378 6.015 43.4286 6.28575V2.28575ZM43.6 9.71425C43.6359 9.45035 43.6149 9.18181 43.5382 8.92674C43.4616 8.67167 43.3311 8.436 43.1557 8.23563C42.9802 8.03525 42.7638 7.87483 42.5211 7.76518C42.2784 7.65554 42.015 7.59921 41.7486 7.6C40.6553 7.67937 39.8268 8.61963 39.8857 9.71425C39.8268 10.8089 40.6553 11.7492 41.7486 11.8286C42.015 11.8294 42.2784 11.7731 42.5211 11.6634C42.7639 11.5538 42.9803 11.3933 43.1557 11.193C43.3312 10.9926 43.4616 10.7569 43.5383 10.5018C43.6149 10.2467 43.636 9.97816 43.6 9.71425ZM9.14287 2.05713C8.77532 2.06233 8.42343 2.20682 8.15826 2.4614C7.8931 2.71599 7.73441 3.06171 7.71425 3.42875C7.71425 4.21763 8.35388 4.85725 9.14287 4.85725C9.93187 4.85725 10.5712 4.2175 10.5712 3.42875C10.5511 3.06175 10.3924 2.71608 10.1272 2.46153C9.86211 2.20697 9.51027 2.06249 9.14275 2.05725L9.14287 2.05713ZM8 13.7142H10.2858V5.71425H8V13.7142ZM64 1.14287V14.8571C64 15.1602 63.8796 15.4509 63.6653 15.6653C63.4509 15.8796 63.1602 16 62.8571 16H49.1429C48.8398 16 48.5491 15.8796 48.3347 15.6653C48.1204 15.4509 48 15.1602 48 14.8571V1.14287C48 0.839766 48.1204 0.549071 48.3347 0.33474C48.5491 0.12041 48.8398 0 49.1429 0L62.8571 0C63.1602 0 63.4509 0.12041 63.6653 0.33474C63.8796 0.549071 64 0.839766 64 1.14287ZM52.5714 5.71425H50.2858V13.7142H52.5714V5.71425ZM52.8571 3.42863C52.8571 2.63963 52.2175 2 51.4286 2C50.6396 2 50 2.63963 50 3.42863C50 4.2175 50.6396 4.85712 51.4286 4.85712C52.2175 4.85712 52.8571 4.2175 52.8571 3.42863ZM61.7142 9.47425C61.7142 6.96 60.88 5.48575 58.4458 5.48575C57.9375 5.48579 57.4371 5.61091 56.9886 5.85008C56.5402 6.08924 56.1574 6.43509 55.8742 6.85712V5.71425H53.7142V13.7142H56V9.97713C55.97 9.70587 55.9961 9.43134 56.0768 9.17063C56.1575 8.90991 56.2909 8.66859 56.4689 8.46168C56.6468 8.25477 56.8655 8.08671 57.1112 7.96795C57.3569 7.84919 57.6244 7.78228 57.8971 7.77138C59.2229 7.77138 59.4286 9.07425 59.4286 9.97713V13.7142H61.7142V9.47425Z"
                  fill="#3A8DE0"
                />
              </g>
              <defs>
                <clipPath id="clip0_583_246">
                  <rect width="64" height="16" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </Link>
          </motion.div>
          <motion.h3
            variants={textVariants}
            initial="initial"
            animate={isHovering ? "hover" : "initial"}
            className="text-white"
          >
            {name}
          </motion.h3>
          <motion.p
            variants={textVariants}
            initial="initial"
            animate={isHovering ? "hover" : "initial"}
            className="text-[12px] leading-normal font-semibold text-[#FAC4C2] font-poppins"
          >
            {title}
          </motion.p>
        </motion.div>
      </motion.div>
    </div>
  );
};

export default ImageCard;
